http://learn.knockoutjs.com/#/?tutorial=intro


Introduction
============

Data-bind
---------
data-bind attributes are how Knockout lets you declaratively associate viewmodel properties with DOM elements. 
You just used the text binding to assign text to your DOM elements.


	HTML
	----

	<!-- This is a *view* - HTML markup that defines the appearance of your UI -->

	<p>First name: <strong data-bind="text: firstName">todo</strong></p>
	<p>Last name: <strong data-bind="text: lastName">todo</strong></p>


	JS
	--

	// This is a simple *viewmodel* - JavaScript that defines the data and behavior of your UI

	function AppViewModel() {
    	     this.firstName = "Bert";
    	     this.lastName = "Bertington";
	}

	// Activates knockout.js
	
	ko.applyBindings(new AppViewModel());


	Output
	------

	First name: Bert

	Last name: Bertington


Making the data editable
------------------------

	<p>First name: <input data-bind="value: firstName"/></p>
	<p>Last name: <input data-bind="value: lastName"/></p>


Observable
----------
observables - these are properties that automatically will issue notifications whenever their value changes.
Update your viewmodel to make the firstName and lastName properties observable using ko.observable:

	JS
	--

	function AppViewModel() {
    	     this.firstName = ko.observable("Bert");
    	     this.lastName = ko.observable("Bertington");
	}

	ko.applyBindings(new AppViewModel());


	HTML
	----


	<p>First name: <strong data-bind="text: firstName">todo</strong></p>
	<p>Last name: <strong data-bind="text: lastName">todo</strong></p>

	<p>First name: <input data-bind="value: firstName"/></p>
	<p>Last name: <input data-bind="value: lastName"/></p>

	Output
	------

	First name: Bert
	Last name: Bertington

	//Input
	First name: Bert	

	//Input
	Last name: Bertington


Computed values
---------------
computed properties - these are observable (i.e., they notify on change) and 
they are computed based on the values of other observables.

	 this.fullName = ko.computed(function() {
    	     return this.firstName() + " " + this.lastName();    
	 }, this);


	JS
	--

	function AppViewModel() {
    	     this.firstName = ko.observable("Bert");
    	     this.lastName = ko.observable("Bertington");
    
    	     this.fullName = ko.computed(function() {
    	          return this.firstName() + " " + this.lastName();    
	     }, this);
    
	}

	ko.applyBindings(new AppViewModel());


	HTML
	----

	<p>First name: <strong data-bind="text: firstName"></strong></p>
	<p>Last name: <strong data-bind="text: lastName"></strong></p>
	<p>Full name: <strong data-bind="text: fullName"></strong></p>


	Output
	------

	First name: Bert
	Last name: Bertington
	Full name: Bert Bertington